{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nconst Canvas_1 = require(\"./Canvas\");\n\nconst Particles_1 = require(\"./Particles\");\n\nconst Retina_1 = require(\"./Retina\");\n\nconst FrameManager_1 = require(\"./FrameManager\");\n\nconst Options_1 = require(\"../Options/Classes/Options\");\n\nconst Utils_1 = require(\"../Utils\");\n\nconst Vector_1 = require(\"./Particle/Vector\");\n\nclass Container {\n  constructor(id, sourceOptions) {\n    this.id = id;\n    this.fpsLimit = 60;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this.firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    this.presets = presets;\n    this.pathGenerator = {\n      generate: () => {\n        const v = Vector_1.Vector.create(0, 0);\n        v.length = Math.random();\n        v.angle = Math.random() * Math.PI * 2;\n        return v;\n      },\n      init: () => {},\n      update: () => {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this._options = new Options_1.Options();\n    this.actualOptions = new Options_1.Options();\n    this.eventListeners = new Utils_1.EventListeners(this);\n\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(entries => this.intersectionManager(entries));\n    }\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n\n  play(force) {\n    const needsUpdate = this.paused || force;\n\n    if (this.firstStart && !this.actualOptions.autoPlay) {\n      this.firstStart = false;\n      return;\n    }\n\n    if (this.paused) {\n      this.paused = false;\n    }\n\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n\n    this.draw(needsUpdate || false);\n  }\n\n  pause() {\n    if (this.drawAnimationFrame !== undefined) {\n      (0, Utils_1.cancelAnimation)()(this.drawAnimationFrame);\n      delete this.drawAnimationFrame;\n    }\n\n    if (this.paused) {\n      return;\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n\n    if (!this.pageHidden) {\n      this.paused = true;\n    }\n  }\n\n  draw(force) {\n    let refreshTime = force;\n    this.drawAnimationFrame = (0, Utils_1.animate)()(timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n\n      this.drawer.nextFrame(timestamp);\n    });\n  }\n\n  getAnimationStatus() {\n    return !this.paused && !this.pageHidden;\n  }\n\n  setNoise(noiseOrGenerator, init, update) {\n    this.setPath(noiseOrGenerator, init, update);\n  }\n\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator) {\n      return;\n    }\n\n    if (typeof pathOrGenerator === \"function\") {\n      this.pathGenerator.generate = pathOrGenerator;\n\n      if (init) {\n        this.pathGenerator.init = init;\n      }\n\n      if (update) {\n        this.pathGenerator.update = update;\n      }\n    } else {\n      if (pathOrGenerator.generate) {\n        this.pathGenerator.generate = pathOrGenerator.generate;\n      }\n\n      if (pathOrGenerator.init) {\n        this.pathGenerator.init = pathOrGenerator.init;\n      }\n\n      if (pathOrGenerator.update) {\n        this.pathGenerator.update = pathOrGenerator.update;\n      }\n    }\n  }\n\n  destroy() {\n    this.stop();\n    this.canvas.destroy();\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n\n    this.destroyed = true;\n  }\n\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n\n  exportImage(callback, type, quality) {\n    var _a;\n\n    return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n  }\n\n  exportConfiguration() {\n    return JSON.stringify(this.actualOptions, undefined, 2);\n  }\n\n  refresh() {\n    this.stop();\n    return this.start();\n  }\n\n  reset() {\n    this._options = new Options_1.Options();\n    return this.refresh();\n  }\n\n  stop() {\n    if (!this.started) {\n      return;\n    }\n\n    this.firstStart = true;\n    this.started = false;\n    this.eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.clear();\n\n    if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n      this.intersectionObserver.observe(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n\n    this.particles.linksColors = new Map();\n    delete this.particles.grabLineColor;\n    delete this.particles.linksColor;\n    this._sourceOptions = this._options;\n  }\n\n  async loadTheme(name) {\n    this.currentTheme = name;\n    await this.refresh();\n  }\n\n  async start() {\n    if (this.started) {\n      return;\n    }\n\n    await this.init();\n    this.started = true;\n    this.eventListeners.addListeners();\n\n    if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n      this.intersectionObserver.observe(this.interactivity.element);\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.startAsync !== undefined) {\n        await plugin.startAsync();\n      } else if (plugin.start !== undefined) {\n        plugin.start();\n      }\n    }\n\n    this.play();\n  }\n\n  addClickHandler(callback) {\n    const el = this.interactivity.element;\n\n    if (!el) {\n      return;\n    }\n\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const pxRatio = this.retina.pixelRatio,\n            posRetina = {\n        x: pos.x * pxRatio,\n        y: pos.y * pxRatio\n      },\n            particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n\n    const clickHandler = e => {\n      if (this.destroyed) {\n        return;\n      }\n\n      const mouseEvent = e;\n      const pos = {\n        x: mouseEvent.offsetX || mouseEvent.clientX,\n        y: mouseEvent.offsetY || mouseEvent.clientY\n      };\n      clickOrTouchHandler(e, pos, 1);\n    };\n\n    const touchStartHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touched = true;\n      touchMoved = false;\n    };\n\n    const touchMoveHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touchMoved = true;\n    };\n\n    const touchEndHandler = e => {\n      var _a, _b, _c;\n\n      if (this.destroyed) {\n        return;\n      }\n\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n\n          if (!lastTouch) {\n            return;\n          }\n        }\n\n        const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n        const pos = {\n          x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n          y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n        };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    const touchCancelHandler = () => {\n      if (this.destroyed) {\n        return;\n      }\n\n      touched = false;\n      touchMoved = false;\n    };\n\n    let touched = false;\n    let touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this.currentTheme);\n\n    if (this.responsiveMaxWidth != newMaxWidth) {\n      this.responsiveMaxWidth = newMaxWidth;\n      return true;\n    }\n\n    return false;\n  }\n\n  async init() {\n    this._options = new Options_1.Options();\n\n    for (const preset of this.presets) {\n      this._options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    const shapes = Utils_1.Plugins.getSupportedShapes();\n\n    for (const type of shapes) {\n      const drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n\n    this._options.load(this._initialSourceOptions);\n\n    this._options.load(this._sourceOptions);\n\n    this.actualOptions = new Options_1.Options();\n    this.actualOptions.load(this._options);\n    this.retina.init();\n    this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this.duration = (0, Utils_1.getRangeValue)(this.actualOptions.duration);\n    this.lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 60;\n    const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n\n    for (const [, drawer] of this.drawers) {\n      if (drawer.init) {\n        await drawer.init(this);\n      }\n    }\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.init) {\n        plugin.init(this.actualOptions);\n      } else if (plugin.initAsync !== undefined) {\n        await plugin.initAsync(this.actualOptions);\n      }\n    }\n\n    const pathOptions = this.actualOptions.particles.move.path;\n\n    if (pathOptions.generator) {\n      const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n\n      if (customGenerator) {\n        if (customGenerator.init) {\n          this.pathGenerator.init = customGenerator.init;\n        }\n\n        if (customGenerator.generate) {\n          this.pathGenerator.generate = customGenerator.generate;\n        }\n\n        if (customGenerator.update) {\n          this.pathGenerator.update = customGenerator.update;\n        }\n      }\n    }\n\n    this.particles.init();\n    this.particles.setDensity();\n\n    for (const [, plugin] of this.plugins) {\n      if (plugin.particlesSetup !== undefined) {\n        plugin.particlesSetup();\n      }\n    }\n  }\n\n  intersectionManager(entries) {\n    if (!this.actualOptions.pauseOnOutsideViewport) {\n      return;\n    }\n\n    for (const entry of entries) {\n      if (entry.target !== this.interactivity.element) {\n        continue;\n      }\n\n      if (entry.isIntersecting) {\n        this.play();\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n}\n\nexports.Container = Container;","map":{"version":3,"sources":["/Users/shahansha/Documents/wokring portfolio-react-main 2 2/node_modules/tsparticles/Core/Container.js"],"names":["Object","defineProperty","exports","value","Container","Canvas_1","require","Particles_1","Retina_1","FrameManager_1","Options_1","Utils_1","Vector_1","constructor","id","sourceOptions","fpsLimit","duration","lifeTime","firstStart","started","destroyed","paused","lastFrameTime","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","Retina","canvas","Canvas","particles","Particles","drawer","FrameManager","presets","pathGenerator","generate","v","Vector","create","length","Math","random","angle","PI","init","update","interactivity","mouse","clicking","inside","bubble","repulse","attract","plugins","Map","drawers","density","_options","Options","actualOptions","eventListeners","EventListeners","IntersectionObserver","intersectionObserver","entries","intersectionManager","options","play","force","needsUpdate","autoPlay","plugin","draw","pause","drawAnimationFrame","undefined","cancelAnimation","refreshTime","animate","timestamp","nextFrame","getAnimationStatus","setNoise","noiseOrGenerator","setPath","pathOrGenerator","destroy","stop","key","keys","delete","exportImg","callback","exportImage","type","quality","_a","element","toBlob","exportConfiguration","JSON","stringify","refresh","start","reset","removeListeners","clear","HTMLElement","observe","linksColors","grabLineColor","linksColor","loadTheme","name","currentTheme","addListeners","startAsync","addClickHandler","el","clickOrTouchHandler","e","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","_b","_c","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","left","top","max","radiusX","radiusY","touchCancelHandler","addEventListener","updateActualOptions","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth","preset","load","Plugins","getPreset","shapes","getSupportedShapes","getShapeDrawer","set","initBackground","resize","getRangeValue","availablePlugins","getAvailablePlugins","initAsync","pathOptions","move","path","generator","customGenerator","getPathGenerator","setDensity","particlesSetup","pauseOnOutsideViewport","entry","target","isIntersecting"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Container = void 0;\nconst Canvas_1 = require(\"./Canvas\");\nconst Particles_1 = require(\"./Particles\");\nconst Retina_1 = require(\"./Retina\");\nconst FrameManager_1 = require(\"./FrameManager\");\nconst Options_1 = require(\"../Options/Classes/Options\");\nconst Utils_1 = require(\"../Utils\");\nconst Vector_1 = require(\"./Particle/Vector\");\nclass Container {\n    constructor(id, sourceOptions, ...presets) {\n        this.id = id;\n        this.fpsLimit = 60;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this.firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this.paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina_1.Retina(this);\n        this.canvas = new Canvas_1.Canvas(this);\n        this.particles = new Particles_1.Particles(this);\n        this.drawer = new FrameManager_1.FrameManager(this);\n        this.presets = presets;\n        this.pathGenerator = {\n            generate: () => {\n                const v = Vector_1.Vector.create(0, 0);\n                v.length = Math.random();\n                v.angle = Math.random() * Math.PI * 2;\n                return v;\n            },\n            init: () => {\n            },\n            update: () => {\n            },\n        };\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.bubble = {};\n        this.repulse = { particles: [] };\n        this.attract = { particles: [] };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this.density = 1;\n        this._options = new Options_1.Options();\n        this.actualOptions = new Options_1.Options();\n        this.eventListeners = new Utils_1.EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this.intersectionObserver = new IntersectionObserver((entries) => this.intersectionManager(entries));\n        }\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    play(force) {\n        const needsUpdate = this.paused || force;\n        if (this.firstStart && !this.actualOptions.autoPlay) {\n            this.firstStart = false;\n            return;\n        }\n        if (this.paused) {\n            this.paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this.draw(needsUpdate || false);\n    }\n    pause() {\n        if (this.drawAnimationFrame !== undefined) {\n            (0, Utils_1.cancelAnimation)()(this.drawAnimationFrame);\n            delete this.drawAnimationFrame;\n        }\n        if (this.paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this.paused = true;\n        }\n    }\n    draw(force) {\n        let refreshTime = force;\n        this.drawAnimationFrame = (0, Utils_1.animate)()((timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this.drawer.nextFrame(timestamp);\n        });\n    }\n    getAnimationStatus() {\n        return !this.paused && !this.pageHidden;\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator) {\n            return;\n        }\n        if (typeof pathOrGenerator === \"function\") {\n            this.pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                this.pathGenerator.init = init;\n            }\n            if (update) {\n                this.pathGenerator.update = update;\n            }\n        }\n        else {\n            if (pathOrGenerator.generate) {\n                this.pathGenerator.generate = pathOrGenerator.generate;\n            }\n            if (pathOrGenerator.init) {\n                this.pathGenerator.init = pathOrGenerator.init;\n            }\n            if (pathOrGenerator.update) {\n                this.pathGenerator.update = pathOrGenerator.update;\n            }\n        }\n    }\n    destroy() {\n        this.stop();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this.destroyed = true;\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    exportImage(callback, type, quality) {\n        var _a;\n        return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, undefined, 2);\n    }\n    refresh() {\n        this.stop();\n        return this.start();\n    }\n    reset() {\n        this._options = new Options_1.Options();\n        return this.refresh();\n    }\n    stop() {\n        if (!this.started) {\n            return;\n        }\n        this.firstStart = true;\n        this.started = false;\n        this.eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this.particles.linksColors = new Map();\n        delete this.particles.grabLineColor;\n        delete this.particles.linksColor;\n        this._sourceOptions = this._options;\n    }\n    async loadTheme(name) {\n        this.currentTheme = name;\n        await this.refresh();\n    }\n    async start() {\n        if (this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        this.eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this.intersectionObserver) {\n            this.intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.startAsync !== undefined) {\n                await plugin.startAsync();\n            }\n            else if (plugin.start !== undefined) {\n                plugin.start();\n            }\n        }\n        this.play();\n    }\n    addClickHandler(callback) {\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (this.destroyed) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (this.destroyed) {\n                return;\n            }\n            const mouseEvent = e;\n            const pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            var _a, _b, _c;\n            if (this.destroyed) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const canvasRect = (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n                const pos = {\n                    x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                    y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (this.destroyed) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false;\n        let touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this.currentTheme);\n        if (this.responsiveMaxWidth != newMaxWidth) {\n            this.responsiveMaxWidth = newMaxWidth;\n            return true;\n        }\n        return false;\n    }\n    async init() {\n        this._options = new Options_1.Options();\n        for (const preset of this.presets) {\n            this._options.load(Utils_1.Plugins.getPreset(preset));\n        }\n        const shapes = Utils_1.Plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = Utils_1.Plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options.load(this._initialSourceOptions);\n        this._options.load(this._sourceOptions);\n        this.actualOptions = new Options_1.Options();\n        this.actualOptions.load(this._options);\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = (0, Utils_1.getRangeValue)(this.actualOptions.duration);\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 60;\n        const availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                plugin.init(this.actualOptions);\n            }\n            else if (plugin.initAsync !== undefined) {\n                await plugin.initAsync(this.actualOptions);\n            }\n        }\n        const pathOptions = this.actualOptions.particles.move.path;\n        if (pathOptions.generator) {\n            const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n            if (customGenerator) {\n                if (customGenerator.init) {\n                    this.pathGenerator.init = customGenerator.init;\n                }\n                if (customGenerator.generate) {\n                    this.pathGenerator.generate = customGenerator.generate;\n                }\n                if (customGenerator.update) {\n                    this.pathGenerator.update = customGenerator.update;\n                }\n            }\n        }\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup !== undefined) {\n                plugin.particlesSetup();\n            }\n        }\n    }\n    intersectionManager(entries) {\n        if (!this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            if (entry.isIntersecting) {\n                this.play();\n            }\n            else {\n                this.pause();\n            }\n        }\n    }\n}\nexports.Container = Container;\n"]},"metadata":{},"sourceType":"script"}